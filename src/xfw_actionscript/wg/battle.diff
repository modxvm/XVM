diff -Naur battle.orig/App.as battle/App.as
--- battle.orig/App.as	2020-07-27 14:29:45.876086800 +0300
+++ battle/App.as	2020-07-27 14:41:24.806212700 +0300
@@ -1,5 +1,6 @@
 package
 {
+    $AppLinks;
     import net.wg.app.IApplication;
     import scaleform.gfx.Extensions;
     import net.wg.mock.MockApplication;
@@ -43,7 +44,7 @@
         {
             if(ms_instance == null && (!Extensions.isScaleform || Extensions.isGFxPlayer))
             {
-                ms_instance = new MockApplication();
+                //ms_instance = new MockApplication();
             }
             return ms_instance;
         }
diff -Naur battle.orig/net/wg/data/constants/Linkages.as battle/net/wg/data/constants/Linkages.as
--- battle.orig/net/wg/data/constants/Linkages.as	2020-07-27 14:29:47.446781200 +0300
+++ battle/net/wg/data/constants/Linkages.as	2020-07-27 14:41:24.871682400 +0300
@@ -543,7 +543,7 @@
 
         public static const BATTLE_PROGRESS_TASK_SEPARATOR:String = "battleProgressTaskSeparatorUI";
 
-        public static const CAPTURE_BAR_LINKAGE:String = "TeamCaptureBarUI";
+        public static var CAPTURE_BAR_LINKAGE:String = "TeamCaptureBarUI";
 
         public static const VEH_CMP_WINDOW_BG_UI:String = "WindowBgUI";
 
diff -Naur battle.orig/net/wg/gui/battle/battleloading/BattleLoadingForm.as battle/net/wg/gui/battle/battleloading/BattleLoadingForm.as
--- battle.orig/net/wg/gui/battle/battleloading/BattleLoadingForm.as	2020-07-27 14:29:54.813003400 +0300
+++ battle/net/wg/gui/battle/battleloading/BattleLoadingForm.as	2020-07-27 14:41:24.891793200 +0300
@@ -84,10 +84,25 @@
 
         private var _rightTeamName:String = "";
 
+        public function get xfw_allyRenderers():Vector.<IBattleLoadingRenderer>
+        {
+            return _allyRenderers;
+        }
+
         private var _allyRenderers:Vector.<IBattleLoadingRenderer>;
 
+        public function get xfw_enemyRenderers():Vector.<IBattleLoadingRenderer>
+        {
+            return _enemyRenderers;
+        }
+
         private var _enemyRenderers:Vector.<IBattleLoadingRenderer>;
 
+        public function get xfw_renderersContainer():BaseRendererContainer
+        {
+            return _renderersContainer;
+        }
+
         private var _renderersContainer:BaseRendererContainer;
 
         public function BattleLoadingForm()
diff -Naur battle.orig/net/wg/gui/battle/battleloading/data/VehiclesDataProvider.as battle/net/wg/gui/battle/battleloading/data/VehiclesDataProvider.as
--- battle.orig/net/wg/gui/battle/battleloading/data/VehiclesDataProvider.as	2020-07-27 14:29:54.802955600 +0300
+++ battle/net/wg/gui/battle/battleloading/data/VehiclesDataProvider.as	2020-07-27 14:41:24.909952100 +0300
@@ -82,7 +82,7 @@
             }
             for each(_loc3_ in param1)
             {
-                this.addUpdatedIndex(push(this.makeVO(_loc3_)) - 1);
+                this.addUpdatedIndex((this as Array).push(this.makeVO(_loc3_)) - 1);
             }
             this.setSorting(param2);
             return true;
@@ -109,7 +109,7 @@
             }
             this.vehicleIDs.splice(0,this.vehicleIDs.length);
             this.vehicleIDs = param1.slice();
-            sort(this.compare);
+            (this as Array).sort(this.compare);
             return true;
         }
 
diff -Naur battle.orig/net/wg/gui/battle/components/PlayersPanelBase.as battle/net/wg/gui/battle/components/PlayersPanelBase.as
--- battle.orig/net/wg/gui/battle/components/PlayersPanelBase.as	2020-07-27 14:29:54.460796900 +0300
+++ battle/net/wg/gui/battle/components/PlayersPanelBase.as	2020-07-27 14:41:24.942074600 +0300
@@ -57,6 +57,9 @@
 
         private var _isInteractive:Boolean = false;
 
+        public var xfw_onListRollOverHandler:Function = onListRollOverHandler;
+        public var xfw_onListRollOutHandler:Function = onListRollOutHandler;
+
         public function PlayersPanelBase()
         {
             this.contextMenuMgr = App.contextMenuMgr;
diff -Naur battle.orig/net/wg/gui/battle/components/TimersPanel.as battle/net/wg/gui/battle/components/TimersPanel.as
--- battle.orig/net/wg/gui/battle/components/TimersPanel.as	2020-07-27 14:29:55.748334800 +0300
+++ battle/net/wg/gui/battle/components/TimersPanel.as	2020-07-27 14:50:38.812581500 +0300
@@ -307,10 +307,12 @@
                 return;
             }
             var _loc3_:int = this.activeSecondaryTimers.length;
+            /*
             if(this.activeSecondaryTimers.indexOf(param1) != -1)
             {
                 this.activeSecondaryTimers.splice(this.activeSecondaryTimers.indexOf(param1),1);
             }
+            */
             _loc2_.resetTimer();
             _loc2_.isActive = false;
             _loc2_.hideTimer();
@@ -341,10 +341,12 @@
             {
                 return;
             }
+            /*
             if(this.activeSecondaryTimers.indexOf(param1) == -1)
             {
                 this.activeSecondaryTimers.push(param1);
             }
+            */
             _loc5_.updateRadialTimer(param2,param3);
             _loc5_.visible = true;
             _loc5_.isActive = true;
diff -Naur battle.orig/net/wg/gui/battle/components/stats/playersPanel/list/BasePlayersPanelListItem.as battle/net/wg/gui/battle/components/stats/playersPanel/list/BasePlayersPanelListItem.as
--- battle.orig/net/wg/gui/battle/components/stats/playersPanel/list/BasePlayersPanelListItem.as	2020-07-27 14:29:56.472778900 +0300
+++ battle/net/wg/gui/battle/components/stats/playersPanel/list/BasePlayersPanelListItem.as	2020-07-27 14:41:25.012476000 +0300
@@ -123,6 +123,11 @@
 
         private var _holderItemID:int = -1;
 
+        public function get xfw_state():Number
+        {
+            return _state;
+        }
+
         private var _state:int = -1;
 
         private var _vehicleName:String = null;
diff -Naur battle.orig/net/wg/gui/battle/epicRandom/views/EpicRandomPage.as battle/net/wg/gui/battle/epicRandom/views/EpicRandomPage.as
--- battle.orig/net/wg/gui/battle/epicRandom/views/EpicRandomPage.as	2020-07-27 14:29:54.792899600 +0300
+++ battle/net/wg/gui/battle/epicRandom/views/EpicRandomPage.as	2020-07-27 14:41:25.040629000 +0300
@@ -324,6 +324,11 @@
             this.updatePositionForQuestProgress();
         }
 
+        public function xfw_onTeamBasesPanelUIChangeHandler(e:Event) : void
+        {
+            this.onTeamBasesPanelUIChangeHandler(e);
+        }
+
         private function onTeamBasesPanelUIChangeHandler(param1:Event) : void
         {
             this.updatePositionForQuestProgress();
diff -Naur battle.orig/net/wg/gui/battle/random/views/BattlePage.as battle/net/wg/gui/battle/random/views/BattlePage.as
--- battle.orig/net/wg/gui/battle/random/views/BattlePage.as	2020-07-27 14:29:54.923679700 +0300
+++ battle/net/wg/gui/battle/random/views/BattlePage.as	2020-07-27 14:41:25.066265700 +0300
@@ -43,7 +43,7 @@
 
         private static const CONSUMABLES_POPUP_OFFSET:int = 60;
 
-        private static const MINIMAP_MARGIN_HEIGHT:int = 6;
+        private static const MINIMAP_MARGIN_HEIGHT:int = -100;
 
         private static const MINIMAP_MARGIN_WIDTH:int = 0;
 
@@ -343,6 +343,11 @@
             this.updatePositionForQuestProgress();
         }
 
+        public function xfw_onTeamBasesPanelUIChangeHandler(e:Event) : void
+        {
+            this.onTeamBasesPanelUIChangeHandler(e);
+        }
+
         private function onTeamBasesPanelUIChangeHandler(param1:Event) : void
         {
             this.updatePositionForQuestProgress();
diff -Naur battle.orig/net/wg/gui/battle/random/views/stats/components/fullStats/FullStats.as battle/net/wg/gui/battle/random/views/stats/components/fullStats/FullStats.as
--- battle.orig/net/wg/gui/battle/random/views/stats/components/fullStats/FullStats.as	2020-07-27 14:29:54.358236000 +0300
+++ battle/net/wg/gui/battle/random/views/stats/components/fullStats/FullStats.as	2020-07-27 14:41:25.097513500 +0300
@@ -11,6 +11,11 @@
     public class FullStats extends TabbedFullStats
     {
 
+        public function set xfw_tableCtrl(value:FullStatsTableCtrl):void
+        {
+            _tableCtrl = value;
+        }
+
         private var _tableCtrl:FullStatsTableCtrl = null;
 
         public function FullStats()
diff -Naur battle.orig/net/wg/gui/battle/random/views/stats/components/fullStats/FullStatsTableCtrl.as battle/net/wg/gui/battle/random/views/stats/components/fullStats/FullStatsTableCtrl.as
--- battle.orig/net/wg/gui/battle/random/views/stats/components/fullStats/FullStatsTableCtrl.as	2020-07-27 14:29:57.620476600 +0300
+++ battle/net/wg/gui/battle/random/views/stats/components/fullStats/FullStatsTableCtrl.as	2020-07-27 14:41:25.113138600 +0300
@@ -30,6 +30,11 @@
 
         private static const SQUAD_BT_Y_START:int = 38;
 
+        public function get xfw_table():FullStatsTable
+        {
+            return _table;
+        }
+
         private var _table:FullStatsTable = null;
 
         private var _squadHandler:StatsBaseMeta = null;
@@ -241,12 +241,12 @@
             }
         }
 
-        private function createPlayerStatsItem(param1:int, param2:int) : StatsTableItem
+        public function createPlayerStatsItem(param1:int, param2:int) : StatsTableItem
         {
             return new StatsTableItem(this._table,param1,param2);
         }
 
-        private function createSquadItem(param1:int, param2:int) : DynamicSquadCtrl
+        public function createSquadItem(param1:int, param2:int) : DynamicSquadCtrl
         {
             var _loc3_:int = param1 * numRows + param2;
             return new DynamicSquadCtrl(this._table.squadStatusCollection[_loc3_],this._table.squadCollection[_loc3_],this._table.squadAcceptBt,this._table.squadAddBt,this._table.hitCollection[_loc3_],this._table.noSoundCollection[_loc3_]);
diff -Naur battle.orig/net/wg/gui/battle/random/views/stats/components/playersPanel/list/PlayersPanelListLeft.as battle/net/wg/gui/battle/random/views/stats/components/playersPanel/list/PlayersPanelListLeft.as
--- battle.orig/net/wg/gui/battle/random/views/stats/components/playersPanel/list/PlayersPanelListLeft.as	2020-07-27 14:29:58.836913800 +0300
+++ battle/net/wg/gui/battle/random/views/stats/components/playersPanel/list/PlayersPanelListLeft.as	2020-07-27 14:41:25.128763300 +0300
@@ -3,7 +3,7 @@
     public class PlayersPanelListLeft extends PlayersPanelList
     {
 
-        private static const LINKAGE:String = "PlayersPanelListItemLeftUI";
+        public static var LINKAGE:String = "PlayersPanelListItemLeftUI";
 
         public function PlayersPanelListLeft()
         {
diff -Naur battle.orig/net/wg/gui/battle/random/views/stats/components/playersPanel/list/PlayersPanelListRight.as battle/net/wg/gui/battle/random/views/stats/components/playersPanel/list/PlayersPanelListRight.as
--- battle.orig/net/wg/gui/battle/random/views/stats/components/playersPanel/list/PlayersPanelListRight.as	2020-07-27 14:29:57.206127400 +0300
+++ battle/net/wg/gui/battle/random/views/stats/components/playersPanel/list/PlayersPanelListRight.as	2020-07-27 14:41:25.150897000 +0300
@@ -3,7 +3,7 @@
     public class PlayersPanelListRight extends PlayersPanelList
     {
 
-        private static const LINKAGE:String = "PlayersPanelListItemRightUI";
+        public static var LINKAGE:String = "PlayersPanelListItemRightUI";
 
         public function PlayersPanelListRight()
         {
diff -Naur battle.orig/net/wg/gui/battle/random/views/teamBasesPanel/TeamBasesPanel.as battle/net/wg/gui/battle/random/views/teamBasesPanel/TeamBasesPanel.as
--- battle.orig/net/wg/gui/battle/random/views/teamBasesPanel/TeamBasesPanel.as	2020-07-27 14:29:58.696124900 +0300
+++ battle/net/wg/gui/battle/random/views/teamBasesPanel/TeamBasesPanel.as	2020-07-27 14:41:25.166530000 +0300
@@ -12,8 +12,16 @@
 
     public class TeamBasesPanel extends TeamBasesPanelMeta implements ITeamBasesPanelMeta
     {
+        public function get xfw_RENDERER_HEIGHT():Number
+        {
+            return RENDERER_HEIGHT;
+        }
+        public function set xfw_RENDERER_HEIGHT(value:Number):void
+        {
+            RENDERER_HEIGHT = value;
+        }
 
-        private static const RENDERER_HEIGHT:Number = 34;
+        private var RENDERER_HEIGHT:Number = 34;
 
         private static const ASSERT_MSG:String = "[TeamBasesPanel] Can\'t find teamCaptureBar with id=";
 
@@ -251,6 +259,11 @@
             }
         }
 
+        public function xfw_updatePositions() : void
+        {
+            updatePositions();
+        }
+
         private function updatePositions() : void
         {
             var _loc2_:* = NaN;
diff -Naur battle.orig/net/wg/gui/battle/random/views/teamBasesPanel/TeamCaptureBar.as battle/net/wg/gui/battle/random/views/teamBasesPanel/TeamCaptureBar.as
--- battle.orig/net/wg/gui/battle/random/views/teamBasesPanel/TeamCaptureBar.as	2020-07-27 14:29:57.258478000 +0300
+++ battle/net/wg/gui/battle/random/views/teamBasesPanel/TeamCaptureBar.as	2020-07-27 14:41:25.213403200 +0300
@@ -21,7 +21,7 @@
 
         private static const ALPHA_FADE_SPEED:Number = 500;
 
-        private static const EXIT_TWEEN_Y:int = -10;
+        public static var EXIT_TWEEN_Y:int = -10;
 
         private static const EXIT_TWEEN_DELAY:Number = 4500;
 
diff -Naur battle.orig/net/wg/gui/battle/ranked/battleloading/renderers/RankedPlayerItemRenderer.as battle/net/wg/gui/battle/ranked/battleloading/renderers/RankedPlayerItemRenderer.as
--- battle.orig/net/wg/gui/battle/ranked/battleloading/renderers/RankedPlayerItemRenderer.as	2020-07-27 14:29:56.009880400 +0300
+++ battle/net/wg/gui/battle/ranked/battleloading/renderers/RankedPlayerItemRenderer.as	2020-07-27 14:41:25.244651900 +0300
@@ -9,6 +9,11 @@
     public class RankedPlayerItemRenderer extends BasePlayerItemRenderer
     {
 
+        public function get xfw_rankIcon():BattleAtlasSprite
+        {
+            return _rankIcon;
+        }
+
         private var _rankIcon:BattleAtlasSprite;
 
         public function RankedPlayerItemRenderer(param1:BaseRendererContainer, param2:int, param3:Boolean)
diff -Naur battle.orig/net/wg/gui/battle/ranked/stats/components/fullStats/FullStats.as battle/net/wg/gui/battle/ranked/stats/components/fullStats/FullStats.as
--- battle.orig/net/wg/gui/battle/ranked/stats/components/fullStats/FullStats.as	2020-07-27 14:29:56.744577800 +0300
+++ battle/net/wg/gui/battle/ranked/stats/components/fullStats/FullStats.as	2020-07-27 14:41:25.251159500 +0300
@@ -11,6 +11,11 @@
     public class FullStats extends StatsBase
     {
 
+        public function set xfw_tableCtrl(value:FullStatsTableCtrl):void
+        {
+            _tableCtrl = value;
+        }
+
         private var _tableCtrl:FullStatsTableCtrl = null;
 
         public function FullStats()
diff -Naur battle.orig/net/wg/gui/battle/ranked/stats/components/fullStats/FullStatsTableCtrl.as battle/net/wg/gui/battle/ranked/stats/components/fullStats/FullStatsTableCtrl.as
--- battle.orig/net/wg/gui/battle/ranked/stats/components/fullStats/FullStatsTableCtrl.as	2020-07-27 14:29:58.173336500 +0300
+++ battle/net/wg/gui/battle/ranked/stats/components/fullStats/FullStatsTableCtrl.as	2020-07-27 14:41:25.282415800 +0300
@@ -20,6 +20,11 @@
 
         private static const TABLE_START_POINT:int = 33;
 
+        public function get xfw_table():FullStatsTable
+        {
+            return _table;
+        }
+
         private var _table:FullStatsTable = null;
 
         public function FullStatsTableCtrl(param1:FullStatsTable)
@@ -110,7 +115,7 @@
             }
         }
 
-        private function createPlayerStatsItem(param1:int, param2:int) : StatsTableItem
+        public function createPlayerStatsItem(param1:int, param2:int) : StatsTableItem
         {
             return new StatsTableItem(this._table,param1,param2);
         }
diff -Naur battle.orig/net/wg/gui/battle/ranked/stats/components/playersPanel/list/PlayersPanelListLeft.as battle/net/wg/gui/battle/ranked/stats/components/playersPanel/list/PlayersPanelListLeft.as
--- battle.orig/net/wg/gui/battle/ranked/stats/components/playersPanel/list/PlayersPanelListLeft.as	2020-07-27 14:29:59.038022700 +0300
+++ battle/net/wg/gui/battle/ranked/stats/components/playersPanel/list/PlayersPanelListLeft.as	2020-07-27 14:41:25.298040300 +0300
@@ -3,7 +3,7 @@
     public class PlayersPanelListLeft extends PlayersPanelList
     {
 
-        private static const LINKAGE:String = "RankedPlayersPanelListItemLeftUI";
+        public static var LINKAGE:String = "RankedPlayersPanelListItemLeftUI";
 
         public function PlayersPanelListLeft()
         {
diff -Naur battle.orig/net/wg/gui/battle/ranked/stats/components/playersPanel/list/PlayersPanelListRight.as battle/net/wg/gui/battle/ranked/stats/components/playersPanel/list/PlayersPanelListRight.as
--- battle.orig/net/wg/gui/battle/ranked/stats/components/playersPanel/list/PlayersPanelListRight.as	2020-07-27 14:29:57.459612400 +0300
+++ battle/net/wg/gui/battle/ranked/stats/components/playersPanel/list/PlayersPanelListRight.as	2020-07-27 14:41:25.313664200 +0300
@@ -3,7 +3,7 @@
     public class PlayersPanelListRight extends PlayersPanelList
     {
 
-        private static const LINKAGE:String = "RankedPlayersPanelListItemRightUI";
+        public static var LINKAGE:String = "RankedPlayersPanelListItemRightUI";
 
         public function PlayersPanelListRight()
         {
diff -Naur battle.orig/net/wg/gui/battle/views/BaseBattlePage.as battle/net/wg/gui/battle/views/BaseBattlePage.as
--- battle.orig/net/wg/gui/battle/views/BaseBattlePage.as	2020-07-27 14:29:54.208876200 +0300
+++ battle/net/wg/gui/battle/views/BaseBattlePage.as	2020-07-27 14:41:25.329292900 +0300
@@ -75,6 +75,11 @@
 
         protected var playerMessageList:MessageListDAAPI;
 
+        public function get xfw_battleStatisticDataController():BattleStatisticDataController
+        {
+            return battleStatisticDataController;
+        }
+
         protected var battleStatisticDataController:BattleStatisticDataController;
 
         protected var postmortemTips:BasePostmortemPanel = null;
@@ -348,6 +348,11 @@
             }
         }
 
+        public function xfw_registerComponent(param1:IDAAPIModule, param2:String) : void
+        {
+            registerComponent(param1,param2);
+        }
+
         protected function registerComponent(param1:IDAAPIModule, param2:String) : void
         {
             this._componentsStorage[param2] = param1;
@@ -397,6 +397,11 @@
             return false;
         }
 
+        public function xfw_onMiniMapChangeHandler(param1:MinimapEvent) : void
+        {
+            onMiniMapChangeHandler(param1);
+        }
+
         protected function onMiniMapChangeHandler(param1:MinimapEvent) : void
         {
             if(this.postmortemTips)
@@ -426,6 +426,11 @@
             this.ribbonsPanel.x = (_originalWidth >> 1) + this.ribbonsPanel.offsetX;
         }
 
+        public function xfw_onMiniMapTrySizeChangeHandler(param1:MinimapEvent) : void
+        {
+            onMiniMapTrySizeChangeHandler(param1);
+        }
+
         private function onMiniMapTrySizeChangeHandler(param1:MinimapEvent) : void
         {
             this.updateMinimapSizeIndex(param1.sizeIndex);
diff -Naur battle.orig/net/wg/gui/battle/views/minimap/Minimap.as battle/net/wg/gui/battle/views/minimap/Minimap.as
--- battle.orig/net/wg/gui/battle/views/minimap/Minimap.as	2020-07-27 14:29:57.419399600 +0300
+++ battle/net/wg/gui/battle/views/minimap/Minimap.as	2020-07-27 14:41:25.351422400 +0300
@@ -47,6 +47,11 @@
 
         public var minimapHint:MinimapHint = null;
 
+        public function get xfw_foregrounds():Vector.<Sprite>
+        {
+            return _foregrounds;
+        }
+
         private var _foregrounds:Vector.<Sprite> = null;
 
         private var _currForeground:Sprite = null;
diff -Naur battle.orig/net/wg/gui/battle/views/minimap/MinimapEntryController.as battle/net/wg/gui/battle/views/minimap/MinimapEntryController.as
--- battle.orig/net/wg/gui/battle/views/minimap/MinimapEntryController.as	2020-07-27 14:29:58.806782800 +0300
+++ battle/net/wg/gui/battle/views/minimap/MinimapEntryController.as	2020-07-27 14:41:25.382678300 +0300
@@ -13,8 +13,18 @@
 
         private static var _instance:MinimapEntryController = null;
 
+        public function get xfw_vehicleEntries():Vector.<IVehicleMinimapEntry>
+        {
+            return _vehicleEntries;
+        }
+
         private var _vehicleEntries:Vector.<IVehicleMinimapEntry> = null;
 
+        public function get xfw_vehicleLabelsEntries():Vector.<IVehicleMinimapEntry>
+        {
+            return _vehicleLabelsEntries;
+        }
+
         private var _vehicleLabelsEntries:Vector.<IVehicleMinimapEntry> = null;
 
         private var _isDisposed:Boolean = false;
@@ -25,6 +35,11 @@
 
         private var _isShowVehicleNamesTurnedOn:Boolean = false;
 
+        public function get xfw_scalableEntries():Vector.<DisplayObject>
+        {
+            return _scalableEntries;
+        }
+
         private var _scalableEntries:Vector.<DisplayObject>;
 
         private var _scalableEntriesWithNonScaleContent:Vector.<IMinimapEntryWithNonScaleContent>;
@@ -170,7 +185,7 @@
             }
             if(param2)
             {
-                _loc3_ = this._scalableEntriesWithNonScaleContent.indexOf(param1);
+                _loc3_ = this._scalableEntriesWithNonScaleContent.indexOf(param1 as IMinimapEntryWithNonScaleContent);
                 if(_loc3_ != -1)
                 {
                     this._scalableEntriesWithNonScaleContent.splice(_loc3_,1);
diff -Naur battle.orig/net/wg/gui/battle/views/minimap/components/entries/vehicle/VehicleMinimapEntry.as battle/net/wg/gui/battle/views/minimap/components/entries/vehicle/VehicleMinimapEntry.as
--- battle.orig/net/wg/gui/battle/views/minimap/components/entries/vehicle/VehicleMinimapEntry.as	2020-07-27 14:29:58.736338600 +0300
+++ battle/net/wg/gui/battle/views/minimap/components/entries/vehicle/VehicleMinimapEntry.as	2020-07-27 14:41:25.398307100 +0300
@@ -76,6 +76,11 @@
 
         public var allyGreenAnimation:VehicleAnimationMinimapEntry = null;
 
+        public function get xfw_currVehicleAnimation():VehicleAnimationMinimapEntry
+        {
+            return _currVehicleAnimation;
+        }
+
         private var _currVehicleAnimation:VehicleAnimationMinimapEntry = null;
 
         private var _currentTextField:TextField = null;
diff -Naur battle.orig/net/wg/infrastructure/helpers/statisticsDataController/BattleStatisticDataController.as battle/net/wg/infrastructure/helpers/statisticsDataController/BattleStatisticDataController.as
--- battle.orig/net/wg/infrastructure/helpers/statisticsDataController/BattleStatisticDataController.as	2020-07-27 14:29:56.311843200 +0300
+++ battle/net/wg/infrastructure/helpers/statisticsDataController/BattleStatisticDataController.as	2020-07-27 14:41:25.413926800 +0300
@@ -26,8 +26,18 @@
     public class BattleStatisticDataController extends BattleStatisticDataControllerMeta implements IBattleStatisticDataControllerMeta, IDAAPIModule, IQuestProgressDataHub
     {
 
+        public function get xfw_componentControllers():Vector.<IBattleComponentDataController>
+        {
+            return _componentControllers;
+        }
+
         private var _componentControllers:Vector.<IBattleComponentDataController>;
 
+        public function get xfw_questProgressViews():Vector.<IQuestProgressViewUpdatable>
+        {
+            return _questProgressViews;
+        }
+
         private var _questProgressViews:Vector.<IQuestProgressViewUpdatable>;
 
         private var _container:DisplayObjectContainer;
diff -Naur battle.orig/net/wg/infrastructure/managers/IContainerManager.as battle/net/wg/infrastructure/managers/IContainerManager.as
--- battle.orig/net/wg/infrastructure/managers/IContainerManager.as	2020-07-27 14:29:46.097990800 +0300
+++ battle/net/wg/infrastructure/managers/IContainerManager.as	2020-07-27 14:41:25.445176000 +0300
@@ -25,6 +25,8 @@
 
         function storeVisibleContainers() : void;
 
+        function get loader() : ILoaderManager;
+
         function set loader(param1:ILoaderManager) : void;
 
         function get lastFocusedView() : IView;
diff -Naur battle.orig/net/wg/infrastructure/managers/impl/AtlasManager.as battle/net/wg/infrastructure/managers/impl/AtlasManager.as
--- battle.orig/net/wg/infrastructure/managers/impl/AtlasManager.as	2020-07-27 14:29:46.802920400 +0300
+++ battle/net/wg/infrastructure/managers/impl/AtlasManager.as	2020-07-27 14:41:25.451684400 +0300
@@ -192,6 +192,11 @@
             }
         }
 
+        public function xfw_getAtlas(param1:String) : IAtlas
+        {
+            return getAtlas(param1);
+        }
+
         private function getAtlas(param1:String) : IAtlas
         {
             if(this._lastAtlas && this._lastAtlas.atlasName == param1)
diff -Naur battle.orig/scaleform/clik/data/DataProvider.as battle/scaleform/clik/data/DataProvider.as
--- battle.orig/scaleform/clik/data/DataProvider.as	2020-07-27 14:29:54.800934200 +0300
+++ battle/scaleform/clik/data/DataProvider.as	2020-07-27 14:41:25.482943900 +0300
@@ -5,8 +5,9 @@
     import flash.events.EventDispatcher;
     import flash.events.Event;
 
-    public dynamic class DataProvider extends Array implements IDataProvider, IEventDispatcher
+    public dynamic class DataProvider extends Object implements IDataProvider, IEventDispatcher
     {
+        public function get length() : uint { return 0; };
 
         protected var dispatcher:EventDispatcher;
 
diff -Naur battle.orig/scaleform/clik/ui/InputDetails.as battle/scaleform/clik/ui/InputDetails.as
--- battle.orig/scaleform/clik/ui/InputDetails.as	2020-07-27 14:29:47.195127100 +0300
+++ battle/scaleform/clik/ui/InputDetails.as	2020-07-27 14:41:25.498567500 +0300
@@ -7,7 +7,7 @@
 
         public var code:Number;
 
-        public var value;
+        public var value:*;
 
         public var navEquivalent:String;
 
